<!DOCTYPE html>

<html>

    <head>
        <title>PageDown Demo Page</title>
        <link rel="stylesheet" type="text/css" href="/style.css" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
        <script type="text/javascript" src="/Markdown.Converter.js"></script>
        <script type="text/javascript" src="/Markdown.Sanitizer.js"></script>
        <script type="text/javascript" src="/Markdown.Editor.js"></script>
        <script src="http://cdnjs.cloudflare.com/ajax/libs/ace/1.1.01/ace.js" type="text/javascript" charset="utf-8"></script>
    </head>
    
    <body>
    <div class="container">
        <div class="wmd-panel">
            <div id="wmd-button-bar"></div>
            <div class="wmd-input" id="wmd-input"></div>
        </div>
        <div id="wmd-preview" class="wmd-panel wmd-preview"></div>
        <br />
        <br />
        <button id="submit" class="btn btn-default" onclick="saveContent()">Save</button>
        <script type="text/javascript">
            (function () {
                var converter1 = Markdown.getSanitizingConverter();
                
                converter1.hooks.chain("preBlockGamut", function (text, rbg) {
                    return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
                        return "<blockquote>" + rbg(inner) + "</blockquote>\n";
                    });
                });
                
                var editor1 = new Markdown.Editor(converter1);
                
                var text1 = document.getElementById('wmd-input').innerHTML;
                var ace1 = ace.edit("wmd-input");
                ace1.setValue(text1, -1);
                editor1.run(ace1);
            })();
            
            function saveContent() {
                var ace1 = ace.edit("wmd-input");
                var text = ace1.getValue();
                var blob = new Blob([text], {type: 'text/plain'});
                var downloadLink = document.createElement("a");
                downloadLink.download = "testfile";
                downloadLink.innerHTML = "Download File";
                if (window.webkitURL != null) {
                    // Chrome allows the link to be clicked
                    // without actually adding it to the DOM.
                    downloadLink.href = window.webkitURL.createObjectURL(blob);
                } else {
                    // Firefox requires the link to be added to the DOM
                    // before it can be clicked.
                    downloadLink.href = window.URL.createObjectURL(blob);
                    downloadLink.onclick = destroyClickedElement;
                    downloadLink.style.display = "none";
                    document.body.appendChild(downloadLink);
                }
                downloadLink.click();
            }
            function destroyClickedElement(event) {
                document.body.removeChild(event.target);
            }
        </script>
    </div>
    </body>
</html>
